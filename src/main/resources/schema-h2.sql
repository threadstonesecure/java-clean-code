DROP TABLE IF EXISTS NOTE;
DROP TABLE IF EXISTS TRANSACTION;
DROP TABLE IF EXISTS ADDRESS;
DROP TABLE IF EXISTS ACCOUNT;
DROP TABLE IF EXISTS USER;
  
CREATE TABLE USER (
  ID INT AUTO_INCREMENT  PRIMARY KEY,
  FIRST_NAME VARCHAR(250) NOT NULL,
  LAST_NAME VARCHAR(250) NOT NULL,
  EMAIL VARCHAR(250) DEFAULT NULL,
  STATUS VARCHAR(8) DEFAULT 'ACTIVE', 
  CREATED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
  MODIFIED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP
);

CREATE TABLE ADDRESS
(
	ID INT AUTO_INCREMENT PRIMARY KEY,
	STREET_NAME  VARCHAR(255),
	CITY  VARCHAR(255),
	STATE VARCHAR(255),
	PIN_CODE INT(8),
	USER_ID INT,
	CREATED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
  	MODIFIED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
	FOREIGN KEY (USER_ID) REFERENCES USER(ID)
);

CREATE TABLE ACCOUNT
(
	ID INT AUTO_INCREMENT PRIMARY KEY,
	TYPE  VARCHAR(8),
	BALANCE  DECIMAL(20,2),
	STATUS VARCHAR(8) DEFAULT 'ACTIVE',
	USER_ID INT,
	CREATED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
  	MODIFIED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
	FOREIGN KEY (USER_ID) REFERENCES USER(ID)
);

CREATE TABLE NOTE
(
	ID INT AUTO_INCREMENT PRIMARY KEY,
	DESC VARCHAR(512),
	USER_ID INT,
	CREATED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
  	MODIFIED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
	FOREIGN KEY (USER_ID) REFERENCES USER(ID)
);

CREATE TABLE TRANSACTION
(
	ID INT AUTO_INCREMENT PRIMARY KEY,
	TYPE  VARCHAR(6), 
	AMOUNT DECIMAL(20,2),
	DESC VARCHAR(512),
	USER_ID INT,
	ACCOUNT_ID INT,
	CREATED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
  	MODIFIED_DATE TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
	FOREIGN KEY (USER_ID) REFERENCES USER(ID)
);
